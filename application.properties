import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
 
@Injectable({
  providedIn: 'root'
})
export class BookService {
private baseUrl = 'http://localhost:9090/books';
private borrowUrl = 'http://localhost:9090/borrowings/borrow';
 
  constructor(private client: HttpClient) {}
 
  // ========== Add Book ==========
  public add(addBook: AddBook): Observable<string> {
return this.client.post(`${this.baseUrl}/addbook`, addBook, { responseType: 'text' });
  }
 
  // ========== View All Books ==========
  public view(): Observable<AllBook[]> {
    return this.client.get<AllBook[]>(`${this.baseUrl}/getall`);
  }
 
  // ========== Delete Book ==========
  public delete(bookId: string): Observable<void> {
    return this.client.delete<void>(`${this.baseUrl}/delete/${bookId}`);
  }
 
  // ========== Get Book by ID ==========
  public getById(bookId: string): Observable<AllBook> {
    return this.client.get<AllBook>(`${this.baseUrl}/getById/${bookId}`);
  }
 
  // ========== Update Book ==========
  public update(bookId: string, book: AddBook): Observable<string> {
    return this.client.put(`${this.baseUrl}/update/${bookId}`, book, { responseType: 'text' });
  }
 
  // ========== Search ==========
  public searchByTitle(title: string): Observable<AllBook[]> {
    return this.client.get<AllBook[]>(`${this.baseUrl}/search/title/${title}`);
  }
 
  public searchByAuthor(author: string): Observable<AllBook[]> {
    return this.client.get<AllBook[]>(`${this.baseUrl}/search/author/${author}`);
  }
 
  public searchByGenre(genre: string): Observable<AllBook[]> {
    return this.client.get<AllBook[]>(`${this.baseUrl}/search/genre/${genre}`);
  }
 
  // ========== Borrow Book ==========
  public borrowBook(bookId: string): Observable<string> {
    const memberId = localStorage.getItem('memberId');
    const body = { bookId, memberId };
return this.client.post(this.borrowUrl, body, { responseType: 'text' });
  }
}
 
// ========== Models ==========
export class AddBook {
  constructor(
    public title: string,
    public author: string,
    public genre: string,
    public isbn: string,
    public yearPublished: string,
    public availableCopies: string
  ) {}
}
 
export class AllBook {
  constructor(
    public bookId: string,
    public title: string,
    public author: string,
    public genre: string,
    public isbn: string,
    public yearPublished: string,
    public availableCopies: string
  ) {}
}
