<form #Loginform="ngForm" (ngSubmit)="validate(Loginform)" novalidate>  
  <!-- Username input -->
  <div class="form-outline mb-4">
    <input
      type="text"
      id="username"
      name="username"
      class="form-control form-control-lg"
      placeholder="Enter a valid username"
      ngModel
      required
      minlength="3"
      #username="ngModel"
    />
    <label class="form-label" for="username">Username</label>
    <div *ngIf="username.invalid && username.touched" class="text-danger mt-1">
      <small *ngIf="username.errors?.['required']">Username is required.</small>
      <small *ngIf="username.errors?.['minlength']">Minimum 3 characters required.</small>
    </div>
  </div>

  <!-- Password input -->
  <div class="form-outline mb-3">
    <input
      type="password"
      id="password"
      name="password"
      class="form-control form-control-lg"
      placeholder="Enter password"
      ngModel
      required
      minlength="4"
      #password="ngModel"
    />
    <label class="form-label" for="password">Password</label>
    <div *ngIf="password.invalid && password.touched" class="text-danger mt-1">
      <small *ngIf="password.errors?.['required']">Password is required.</small>
      <small *ngIf="password.errors?.['minlength']">Minimum 4 characters required.</small>
    </div>
  </div>

  <!-- Submit button -->
  <div class="text-center text-lg-start mt-4 pt-2">
    <button 
      type="submit" 
      class="btn btn-primary btn-lg"
      style="padding-left: 2.5rem; padding-right: 2.5rem;"
      [disabled]="Loginform.invalid"
    >
      Login
    </button>
    <p class="small fw-bold mt-2 pt-1 mb-0">
      Don't have an account? 
      <a routerLink="/register" class="link-danger">Register</a>
    </p>
  </div>
</form>


validate(form: NgForm) {
  if (form.invalid) {
    alert("Please fill in the form correctly.");
    return;
  }

  this.authService.authenticate_User(form.value).subscribe(response => {
    console.log("Response from backend:", response);
    localStorage.setItem("JWT", response);

    const decodedToken: any = jwtDecode(response);
    const email = decodedToken.email;

    localStorage.setItem("email", email);
    localStorage.setItem("sub", form.value.username);

    alert("Logged In Successfully");
    this.router.navigate(['/home']);
  });
}
