<app-navbar></app-navbar>

<div class="container">
  <h3>Member Management</h3>

  <!-- Only admin can see search -->
  <div *ngIf="userRole === 'admin'" class="input-group">
    <input type="number" class="form-control" placeholder="Enter Member ID" [(ngModel)]="memberId">
    <button class="btn btn-primary" (click)="searchMember()">Search</button>
  </div>

  <!-- If a specific member is found -->
  <div *ngIf="member" class="card">
    <div class="card-body">
      <p><strong>ID:</strong> {{ member.memberId }}</p>
      <p><strong>Name:</strong> {{ member.name }}</p>
      <p><strong>Email:</strong> {{ member.email }}</p>
      <p><strong>Phone:</strong> {{ member.phone }}</p>
      <p><strong>Address:</strong> {{ member.address }}</p>
      <p><strong>Status:</strong> {{ member.membershipStatus }}</p>
    </div>
  </div>

  <!-- All members -->
  <div *ngFor="let m of members" class="card">
    <div class="card-body">
      <p><strong>ID:</strong> {{ m.memberId }}</p>
      <p><strong>Name:</strong> {{ m.name }}</p>
      <p><strong>Email:</strong> {{ m.email }}</p>
      <p><strong>Phone:</strong> {{ m.phone }}</p>
      <p><strong>Address:</strong> {{ m.address }}</p>
      <p><strong>Status:</strong> {{ m.membershipStatus }}</p>

      <!-- Admin actions -->
      <div class="actions" *ngIf="userRole === 'admin'">
        <button class="btn btn-warning" (click)="updateMember(m.memberId)">Update</button>
        <button class="btn btn-danger" (click)="deleteMember(m.memberId)">Delete</button>
      </div>

      <!-- Member actions -->
      <div class="actions" *ngIf="userRole === 'member' && m.email === loggedInEmail">
        <button class="btn btn-info" (click)="checkfine()">Check Fine</button>
        <button class="btn btn-success" (click)="pay()">Pay</button>
      </div>
    </div>
  </div>
</div>


/* Container styling */
.container {
  max-width: 900px;
  margin: 2rem auto;
  padding: 1rem;
}

/* Header */
h3 {
  text-align: center;
  font-weight: 600;
  color: #333;
  margin-bottom: 1rem;
}

/* Input group */
.input-group {
  margin: 1rem 0;
}

/* Search box */
.form-control {
  border-radius: 6px;
  padding: 0.5rem 1rem;
  font-size: 16px;
}

/* Button styles */
.btn {
  margin: 0.25rem;
  min-width: 100px;
  font-weight: 500;
  border-radius: 6px;
}

/* Individual button colors (Bootstrap-aligned) */
.btn-primary {
  background-color: #007bff;
  border: none;
}

.btn-success {
  background-color: #28a745;
  border: none;
}

.btn-warning {
  background-color: #ffc107;
  color: #000;
  border: none;
}

.btn-danger {
  background-color: #dc3545;
  border: none;
}

.btn-info {
  background-color: #17a2b8;
  border: none;
}

/* Card styles */
.card {
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
  margin-bottom: 1.5rem;
  transition: transform 0.2s, box-shadow 0.2s;
}

.card:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
}

/* Card content */
.card-body {
  padding: 1rem 1.5rem;
}

.card-body p {
  margin: 0.25rem 0;
  font-size: 15px;
  color: #555;
}

.card-body strong {
  color: #000;
}

/* Centered actions */
.actions {
  text-align: center;
  margin-top: 1rem;
}

/* Responsive layout for mobile */
@media (max-width: 600px) {
  .btn {
    width: 100%;
    margin-bottom: 0.5rem;
  }

  .card-body {
    padding: 1rem;
  }
}
