spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=HariKavi0611*
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
eureka.client.instance.preferIpAddress = true
eureka.instance.hostname=localhost

<app-navbar></app-navbar>
<div class="container">
  <div class="row align-items-center justify-content-center gap-4">
    <ng-container *ngFor="let book of books; trackBy: trackById">
      <div class="card shadow-lg col-md-3 mt-3 mb-3 text-center">
        <img
src="https://tse1.mm.bing.net/th/id/OIP.li28PO9vkz1NQS9jN9ZOOAHaHa?w=161&h=180&c=7&r=0&o=5&dpr=1.2&pid=1.7"
          class="img-fluid rounded mt-3 mb-3"
          alt="Book Cover"
        />
        <h3 class="text-primary">{{ book.title }}</h3>
        <p><strong>Author:</strong> {{ book.author }}</p>
        <p><strong>Genre:</strong> {{ book.genre }}</p>
        <p><strong>ISBN:</strong> {{ book.isbn }}</p>
        <p><strong>Year:</strong> {{ book.yearPublished }}</p>
        <div class="d-flex justify-content-center mb-4 gap-2">
          <button class="btn btn-outline-warning" (click)="updateBook(book.bookId)">
            Update
          </button>
          <button class="btn btn-outline-danger" (click)="deleteBook(book.bookId)">
            Delete
          </button>
        </div>
      </div>
    </ng-container>
  </div>
 
  <div *ngIf="books.length === 0" class="alert alert-info text-center mt-4">
    No books available in the library.
  </div>
  <div class="d-grid">
    <button type="submit" class="btn btn-custom mt-5" routerLink="/book">Ok</button>
  </div>
</div>

node the styles of above UI code add similar one to the below code insted of update and delete add borrow and return

<app-navbar></app-navbar>
<div class="container " style="margin-top: 150px;">
    <div class="card p-4 shadow-sm">
      <h3 class="mb-3">View Borrowed Books by Member</h3>
   
      <div class="mb-3">
        <label for="memberId" class="form-label">Member ID</label>
        <input  type="number" class="form-control" [(ngModel)]="memberId" name="memberId" required min="1"/>
      </div>
   
      <button class="btn btn-primary mb-3" (click)="fetchBorrows()">View Borrows</button>
   
      <div *ngIf="message" class="alert alert-info">{{ message }}</div>
   
      <div *ngIf="borrowList.length > 0">
        <div *ngFor="let borrow of borrowList" class="card mb-3 shadow-sm">
          <div class="card-body">
            <h5 class="card-title">Transaction ID: {{ borrow.transactionId }}</h5>
            <p class="card-text">
              <strong>Book ID:</strong> {{ borrow.bookId }}<br>
              <strong>Member ID:</strong> {{ borrow.memberId }}<br>
              <strong>Borrow Date:</strong> {{ borrow.borrowDate }}<br>
              <strong>Return Date:</strong> {{ borrow.returnDate || 'Not Returned' }}<br>
              <strong>Status:</strong> {{ borrow.status }}
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
