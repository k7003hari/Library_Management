import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class MemberService {
  private addUrl = 'http://localhost:9090/members/regMember';
  private viewUrl = 'http://localhost:9090/members/getallMember';
  private searchUrl = 'http://localhost:9090/members/';
  private updateUrl = 'http://localhost:9090/members/update/';
  private deleteUrl = 'http://localhost:9090/members/delete/';

  constructor(private http: HttpClient) {}

  addMember(member: any): Observable<any> {
    return this.http.post(this.addUrl, member);
  }

  getAllMembers(): Observable<any> {
    return this.http.get(this.viewUrl);
  }

  getMemberById(id: number): Observable<any> {
    return this.http.get(this.searchUrl + id);
  }

  updateMember(id: number, member: any): Observable<any> {
    return this.http.put(this.updateUrl + id, member);
  }

  deleteMember(id: number): Observable<any> {
    return this.http.delete<void>(this.deleteUrl + id);
  }
 
}

<app-navbar></app-navbar>

<div class="container" style="margin-top: 100px;">
  <!-- Header -->
  <div class="align-items-center justify-content-center text-center mt-3 mb-4">
    <h2 class="mb-4 text-primary">
      👥 Member Module
    </h2>
    <p class="text-muted mb-5">Manage all member-related operations from here</p>
  </div>

  <!-- 🔍 Search Member Section -->
  <div class="row mb-5 justify-content-center">
    <div class="col-md-6">
      <div class="card shadow-sm p-4">
        <h5 class="text-primary mb-3 text-center">Search Member by ID</h5>
        <div class="form-group mb-3">
          <input
            type="number"
            [(ngModel)]="memberId"
            class="form-control"
            placeholder="Enter Member ID"
          />
        </div>
        <button class="btn btn-primary w-100" (click)="searchMember()">
          <i class="bi bi-search"></i> Search
        </button>
      </div>
    </div>
  </div>

  <!-- ✅ Member Found Card -->
  <div *ngIf="member" class="row justify-content-center">
    <div class="col-md-6">
      <div class="card shadow border-success">
        <div class="card-body text-start">
          <h5 class="text-success text-center">✅ Member Found</h5>
          <p><strong>Name:</strong> {{ member.name }}</p>
          <p><strong>Email:</strong> {{ member.email }}</p>
          <p><strong>Phone:</strong> {{ member.phone }}</p>
          <p><strong>Address:</strong> {{ member.address }}</p>
          <p><strong>Status:</strong> {{ member.membershipStatus }}</p>
        </div>
        <div class="card-footer text-center">
          <button class="btn btn-outline-secondary" routerLink="/member">OK</button>
        </div>
      </div>
    </div>
  </div>

  <!-- 👥 Manage Members Section -->
  <div class="mt-5 mb-3 text-center">
    <h4 class="text-primary mb-4">Manage Members</h4>
  </div>

  <div class="row">
    <!-- 📇 Member Cards -->
    <ng-container *ngFor="let member of members">
      <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex align-items-stretch mb-4">
        <div class="card shadow w-100 text-center">
          <img
            src="https://cdn-icons-png.flaticon.com/512/2288/2288510.png"
            class="img-fluid rounded-top p-4"
            alt="Member Icon"
            style="height: 180px; object-fit: contain;"
          />
          <div class="card-body text-start">
            <h5 class="card-title text-primary text-center">Member Details</h5>
            <p><strong>Name:</strong> {{ member.name }}</p>
            <p><strong>Email:</strong> {{ member.email }}</p>
            <p><strong>Phone:</strong> {{ member.phone }}</p>
            <p><strong>Address:</strong> {{ member.address }}</p>
            <p><strong>Status:</strong> {{ member.membershipStatus }}</p>
          </div>
          <div class="card-footer d-flex flex-wrap justify-content-center gap-2 p-3">
            <button class="btn btn-outline-warning" (click)="updateMember(member.memberId)" title="Update Member">
              <i class="bi bi-pencil-square"></i> Update
            </button>
            <button class="btn btn-outline-danger" (click)="deleteMember(member.memberId)" title="Delete Member">
              <i class="bi bi-trash"></i> Delete
            </button>
            <button class="btn btn-outline-success" (click)="checkfine()" title="Check Fine">
              <i class="bi bi-currency-rupee"></i> Check Fine
            </button>
            <button class="btn btn-outline-primary" (click)="pay()" title="Pay Fine">
              <i class="bi bi-wallet"></i> Pay Fine
            </button>
          </div>
        </div>
      </div>
    </ng-container>

    <!-- ➕ Add New Member Card -->
    <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex align-items-stretch mb-4">
      <div class="card add-book-card shadow w-100 text-center" routerLink="/addMember" style="cursor: pointer;">
        <div class="card-body d-flex flex-column justify-content-center align-items-center">
          <i class="bi bi-plus-circle-fill display-4 text-success mb-3"></i>
          <h5 class="text-success fw-semibold">Add New Member</h5>
          <p class="text-muted small">Click to add a new Member</p>
        </div>
      </div>
    </div>
  </div>

  <!-- ❗ No Results -->
  <div *ngIf="members.length === 0" class="alert alert-info text-center mt-4">
    No members found.
  </div>

  <!-- ✔ Register Button -->
  <div class="d-flex justify-content-center mt-4">
    <button class="btn btn-custom" routerLink="/addMember">Register As New Member</button>
  </div>
</div>

import { Component, OnInit } from '@angular/core';
import { MemberService } from '../member.service';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Router, RouterLink } from '@angular/router';
import { NavbarComponent } from '../navbar/navbar.component';

@Component({
  selector: 'app-member-up-del',
  standalone: true,
  imports: [RouterLink, FormsModule, CommonModule, NavbarComponent],
  templateUrl: './member-up-del.component.html',
  styleUrls: ['./member-up-del.component.css']
})
export class MemberUpDelComponent implements OnInit {
  members: any[] = [];
  member: any = null;
  memberId: any;

  constructor(private memberService: MemberService, private router: Router) { }

  ngOnInit(): void {
    this.loadMembers();
  }

  loadMembers(): void {
    this.memberService.getAllMembers().subscribe({
      next: (data) => {
        this.members = data;
        console.log("Loaded members:", this.members);
      },
      error: (err) => {
        console.error("Error loading members", err);
      }
    });
  }

  updateMember(memberId: number): void {
    this.router.navigate(['/updateMember', memberId]);
  }



  deleteMember(memberId:number): void {
    if (confirm('Are you sure you want to delete this book?')) {
      console.log('Attempting to delete member ID:', memberId);
      this.memberService.deleteMember(memberId).subscribe(() => {
        this.members = this.members.filter(member => member.memberId  !== memberId);
      });
    }
  }

  searchMember(): void {
    if (!this.memberId) {
      alert('Please enter a valid Member ID');
      return;
    }

    this.memberService.getMemberById(this.memberId).subscribe({
      next: (data) => {
        this.member = data;
        console.log('Member found:', data);
      },
      error: (error) => {
        alert('Member not found.');
        this.member = null;
        console.error('Error fetching member:', error);
      }
    });
  }

  checkfine(): void {
    this.router.navigate(['/fineCal']);
  }

  pay(): void {
    this.router.navigate(['/finePay']);
  }
}
