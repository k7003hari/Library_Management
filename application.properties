<!-- register.component.html -->
<div class="container mt-4">
  <div class="card p-4 shadow">
    <h2 class="mb-3 text-center">Register as Library Member</h2>
    <form (ngSubmit)="onRegister()" #registerForm="ngForm">

      <!-- Username -->
      <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <input [(ngModel)]="registerData.username" name="username" id="username" type="text" class="form-control" required>
      </div>

      <!-- Email -->
      <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input [(ngModel)]="registerData.email" name="email" id="email" type="email" class="form-control" required>
      </div>

      <!-- Password -->
      <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input [(ngModel)]="registerData.password" name="password" id="password" type="password" class="form-control" required>
      </div>

      <!-- Role -->
      <div class="mb-3">
        <label for="roles" class="form-label">Roles</label>
        <input [(ngModel)]="registerData.roles" name="roles" id="roles" type="text" class="form-control" required>
      </div>

      <hr>

      <!-- Member Name -->
      <div class="mb-3">
        <label for="name" class="form-label">Full Name</label>
        <input [(ngModel)]="registerData.name" name="name" id="name" type="text" class="form-control" required>
      </div>

      <!-- Member Phone -->
      <div class="mb-3">
        <label for="phone" class="form-label">Phone</label>
        <input [(ngModel)]="registerData.phone" name="phone" id="phone" type="text" class="form-control" required>
      </div>

      <!-- Member Address -->
      <div class="mb-3">
        <label for="address" class="form-label">Address</label>
        <textarea [(ngModel)]="registerData.address" name="address" id="address" class="form-control" required></textarea>
      </div>

      <button type="submit" class="btn btn-success w-100">Register & Add Member</button>
    </form>
  </div>
</div>



// register.component.ts
import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { CombinedRegister } from '../models/combined-register.model';

@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent {
  registerData: CombinedRegister = new CombinedRegister('', '', '', '', '', '', '');

  constructor(private http: HttpClient) {}

  onRegister(): void {
    console.log('Registering user and member:', this.registerData);

    // 🔁 Option A: Single API handles both user + member
    this.http.post('http://localhost:9090/auth/registerWithMember', this.registerData).subscribe(
      (res) => {
        alert('Registration successful!');
        console.log(res);
        this.registerData = new CombinedRegister('', '', '', '', '', '', '');
      },
      (err) => {
        alert('Error occurred during registration.');
        console.error(err);
      }
    );

    // 🔁 Option B: Two separate APIs
    /*
    this.http.post('http://localhost:9090/auth/register', {
      username: this.registerData.username,
      email: this.registerData.email,
      password: this.registerData.password,
      roles: this.registerData.roles
    }).subscribe(() => {
      this.http.post('http://localhost:9090/members/regMember', {
        name: this.registerData.name,
        email: this.registerData.email,
        phone: this.registerData.phone,
        address: this.registerData.address
      }).subscribe(
        () => alert('User and Member Registered Successfully'),
        err => alert('User registered, but Member failed')
      );
    });
    */
  }
}

// models/combined-register.model.ts
export class CombinedRegister {
  constructor(
    public username: string,
    public email: string, // used for both user and member
    public password: string,
    public roles: string,
    public name: string,
    public phone: string,
    public address: string
  ) {}
}
