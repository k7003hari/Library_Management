<app-navbar></app-navbar>
<div class="container mt-8 text-center">
    <h2 class="mb-4 text-primary">
      ðŸ“š Book Module
    </h2>
    <p class="text-muted mb-5">Manage all book-related operations from here</p>   
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4 justify-content-center">   
      <div class="col">
        <div class="card h-100 shadow-sm">
          <div class="card-body">
            <h5 class="card-title">View All Books</h5>
            <p class="card-text">Available books</p>
            <button class="btn btn-outline-primary w-100" routerLink="/allBook">Go</button>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="card h-100 shadow-sm">
          <div class="card-body">
            <h5 class="card-title">Add New Book</h5>
            <p class="card-text">Add a new book</p>
            <button class="btn btn-outline-success w-100" routerLink="/addBook">Add</button>
          </div>
        </div>
      </div>   
      <div class="col">
        <div class="card h-100 shadow-sm">
          <div class="card-body">
            <h5 class="card-title">Search Books</h5>
            <p class="card-text">Search for a book by title or author</p>
            <button class="btn btn-outline-info w-100"  routerLink="/bookSearch">Search</button>
          </div>
        </div>
      </div>   
      <div class="col">
        <div class="card h-100 shadow-sm">
          <div class="card-body">
            <h5 class="card-title">Update / Delete</h5>
            <p class="card-text">Edit or remove books </p>
            <button class="btn btn-outline-danger w-100" routerLink="/bookUpDel">Manage</button>
          </div>
        </div>
      </div>   
    </div>
  </div>

export class BookComponent {
  books: AllBook[] = [];
    error: any;
   
    constructor(private bookService: BookService) {
      this.view();
    }
   
    
    view() {
      this.bookService.view().subscribe({
        next: (response: AllBook[]) => this.books = response,
        error: err => this.error = err.message
      });
    }
  }

<div class="container">
  <div class="row align-items-center justify-content-center gap-4">
    <ng-container *ngFor="let book of books; let i = index">
      <div class="card shadow-lg col-md-3 mt-3 mb-3 text-center">
        <img
          src="https://tse1.mm.bing.net/th/id/OIP.li28PO9vkz1NQS9jN9ZOOAHaHa?w=161&h=180&c=7&r=0&o=5&dpr=1.2&pid=1.7"
          class="img-fluid rounded mt-3 mb-3"
          alt="Book Cover"
        />
        <h3 class="text-primary">{{ book.title }}</h3>
        <p><strong>Author:</strong> {{ book.author }}</p>
        <p><strong>Genre:</strong> {{ book.genre }}</p>
        <p><strong>ISBN:</strong> {{ book.isbn }}</p>
        <p><strong>Year:</strong> {{ book.yearPublished }}</p>
        
        <div class="d-flex justify-content-center mb-4 gap-2">
          <button class="btn btn-outline-success">Borrow</button>
          <button class="btn btn-outline-danger">Return</button>
        </div>
      </div>
    </ng-container>
  </div>
 
  <div *ngIf="books.length === 0" class="alert alert-info text-center mt-4">
    No books available in the library.
  </div>
 
  <div class="d-grid">
    <button type="submit" class="btn btn-custom mt-5" routerLink="/book">Ok</button>
  </div>
</div>

export class AllBookComponent {
  books: AllBook[] = [];
  error: any;
 
  constructor(private bookService: BookService) {
    this.view();
  }
 
  
  view() {
    this.bookService.view().subscribe({
      next: (response: AllBook[]) => this.books = response,
      error: err => this.error = err.message
    });
  }
}
