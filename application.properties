<app-navbar></app-navbar>

<div class="container" style="margin-top: 100px;">
  <div class="text-center mt-3 mb-4">
    <div *ngIf="userRole === 'member'" class="alert alert-info">
      You are logged in as: <strong>{{ members[0]?.email }}</strong>
    </div>
    <div *ngIf="userRole === 'admin'" class="alert alert-primary">
      Admin Dashboard - Manage Members
    </div>
    <h2 class="text-primary">👥 Member Module</h2>
    <p class="text-muted mb-4">Manage all member-related operations from here</p>
  </div>

  <!-- All Members (Admin) or Self (Member) -->
  <div class="row">
    <ng-container *ngFor="let member of members">
      <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex align-items-stretch mb-4">
        <div class="card shadow text-center w-100">
          <img src="https://cdn-icons-png.flaticon.com/512/2288/2288510.png"
            class="img-fluid p-3 mx-auto" style="height: 180px; object-fit: contain;" />
          <div class="card-body text-start">
            <h5 class="text-primary text-center">Member Details</h5>
            <p><strong>Name:</strong> {{ member.name }}</p>
            <p><strong>Email:</strong> {{ member.email }}</p>
            <p><strong>Phone:</strong> {{ member.phone }}</p>
            <p><strong>Address:</strong> {{ member.address }}</p>
            <p><strong>Status:</strong> {{ member.membershipStatus }}</p>

            <!-- Fine Info for Member -->
            <div *ngIf="userRole === 'member'" class="border border-info p-2 rounded mt-2">
              <h6 class="text-info text-center">💰 Fine Info</h6>
              <div *ngIf="fineDetails">
                <p><strong>Fine ID:</strong> {{ fineDetails.fineId }}</p>
                <p><strong>Amount:</strong> ₹{{ fineDetails.amount }}</p>
                <p><strong>Status:</strong> {{ fineDetails.status }}</p>
                <p><strong>Date:</strong> {{ fineDetails.transactionDate }}</p>
              </div>
              <div *ngIf="message" class="alert alert-success text-center p-1">{{ message }}</div>
              <div *ngIf="error" class="alert alert-danger text-center p-1">{{ error }}</div>
            </div>
          </div>

          <div class="card-footer d-flex flex-wrap justify-content-center gap-2 p-3">
            <!-- Admin actions -->
            <button *ngIf="userRole === 'admin'" class="btn btn-outline-warning" (click)="updateMember(member.memberId)">
              ✏️ Update
            </button>
            <button *ngIf="userRole === 'admin'" class="btn btn-outline-danger" (click)="deleteMember(member.memberId)">
              🗑️ Delete
            </button>

            <!-- Member actions -->
            <button *ngIf="userRole === 'member'" class="btn btn-outline-success" (click)="calculateFine()">
              💰 Check Fine
            </button>
            <button *ngIf="userRole === 'member'" class="btn btn-outline-primary" (click)="payFine()" [disabled]="!fineDetails">
              🧾 Pay Fine
            </button>
          </div>
        </div>
      </div>
    </ng-container>
  </div>

  <!-- No Members Message -->
  <div *ngIf="members.length === 0" class="alert alert-info text-center">
    No members found.
  </div>
</div>


fineDetails: any = null;
message: string = '';
error: string = '';

calculateFine(): void {
  this.message = '';
  this.error = '';
  const id = Number(localStorage.getItem('memberId'));
  if (!id) {
    this.error = 'Member ID not found';
    return;
  }

  this.memberService.calculateFine(id).subscribe({
    next: (res) => {
      this.fineDetails = res;
      this.message = '✅ Fine calculated successfully.';
    },
    error: (err) => {
      this.error = '❌ Error calculating fine.';
      console.error(err);
    }
  });
}

payFine(): void {
  this.message = '';
  this.error = '';
  const id = Number(localStorage.getItem('memberId'));
  const fineId = this.fineDetails?.fineId;

  if (!fineId) {
    this.error = '⚠️ Please calculate fine first.';
    return;
  }

  this.memberService.payFine(id, fineId).subscribe({
    next: () => {
      this.message = '💸 Fine paid successfully.';
      this.fineDetails.status = 'PAID';
    },
    error: (err) => {
      this.error = '❌ Payment failed.';
      console.error(err);
    }
  });
}

calculateFine(memberId: number): Observable<any> {
  return this.http.post(`http://localhost:9090/fines/calculate/${memberId}`, {});
}

payFine(memberId: number, fineId: number): Observable<any> {
  return this.http.post(`http://localhost:9090/fines/pay/${memberId}/${fineId}`, {});
}
