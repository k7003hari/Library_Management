<app-navbar></app-navbar>

<!-- ✅ Toast Notification -->
<div *ngIf="toastMessage" class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1055;">
  <div class="toast show align-items-center text-white bg-success border-0" role="alert">
    <div class="d-flex">
      <div class="toast-body">
        {{ toastMessage }}
      </div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" (click)="toastMessage = null"></button>
    </div>
  </div>
</div>

<div class="container" style="max-width: 500px; margin-top: 150px;">
  <div class="card shadow-sm">
    <div class="card-header bg-primary text-white text-center">
      <h3 class="mb-0">Add New Book</h3>
    </div>
    <div class="card-body">
      <form #addBook="ngForm" (ngSubmit)="validateAdd(addBook)" novalidate>

        <div class="form-floating mb-3">
          <input type="text" class="form-control" id="title" name="title" placeholder="Title"
            ngModel required minlength="3" #title="ngModel" />
          <label for="title">Title</label>
          <div *ngIf="title.invalid && (title.dirty || title.touched)" class="text-danger small">
            <div *ngIf="title.errors?.['required']">Title is required.</div>
            <div *ngIf="title.errors?.['minlength']">Title must be at least 3 characters.</div>
          </div>
        </div>

        <div class="form-floating mb-3">
          <input type="text" class="form-control" id="author" name="author" placeholder="Author"
            ngModel required minlength="3" #author="ngModel" />
          <label for="author">Author</label>
          <div *ngIf="author.invalid && (author.dirty || author.touched)" class="text-danger small">
            <div *ngIf="author.errors?.['required']">Author is required.</div>
            <div *ngIf="author.errors?.['minlength']">Author must be at least 3 characters.</div>
          </div>
        </div>

        <div class="form-floating mb-3">
          <input type="text" class="form-control" id="genre" name="genre" placeholder="Genre"
            ngModel required #genre="ngModel" />
          <label for="genre">Genre</label>
          <div *ngIf="genre.invalid && (genre.dirty || genre.touched)" class="text-danger small">
            Genre is required.
          </div>
        </div>

        <div class="form-floating mb-3">
          <input type="text" class="form-control" id="isbn" name="isbn" placeholder="ISBN"
            ngModel required pattern="^[0-9\-]{10,13}$" #isbn="ngModel" />
          <label for="isbn">ISBN</label>
          <div *ngIf="isbn.invalid && (isbn.dirty || isbn.touched)" class="text-danger small">
            <div *ngIf="isbn.errors?.['required']">ISBN is required.</div>
            <div *ngIf="isbn.errors?.['pattern']">Invalid ISBN format.</div>
          </div>
        </div>

        <div class="form-floating mb-3">
          <input type="number" class="form-control" id="yearPublished" name="yearPublished"
            placeholder="Year Published" ngModel required min="1900" max="2099" #yearPublished="ngModel" />
          <label for="yearPublished">Year Published</label>
          <div *ngIf="yearPublished.invalid && (yearPublished.dirty || yearPublished.touched)"
            class="text-danger small">
            <div *ngIf="yearPublished.errors?.['required']">Year Published is required.</div>
            <div *ngIf="yearPublished.errors?.['min']">Year must be after 1900.</div>
            <div *ngIf="yearPublished.errors?.['max']">Year must be before 2100.</div>
          </div>
        </div>

        <div class="form-floating mb-4">
          <input type="number" class="form-control" id="availableCopies" name="availableCopies"
            placeholder="Available Copies" ngModel required min="0" #availableCopies="ngModel" />
          <label for="availableCopies">Available Copies</label>
          <div *ngIf="availableCopies.invalid && (availableCopies.dirty || availableCopies.touched)"
            class="text-danger small">
            <div *ngIf="availableCopies.errors?.['required']">Available Copies is required.</div>
            <div *ngIf="availableCopies.errors?.['min']">Copies must be at least 0.</div>
          </div>
        </div>

        <button class="btn btn-success w-100 fw-bold" type="submit" [disabled]="addBook.invalid">
          Add Book
        </button>
      </form>
    </div>
  </div>
</div>

export class AddBookComponent {
  toastMessage: string | null = null;

  constructor(private router: Router, private bookService: BookService) {}

  validateAdd(form: NgForm) {
    if (form.invalid) return;

    this.bookService.add(form.value).subscribe({
      next: (response) => {
        console.log('✅ Book added:', response);
        this.toastMessage = 'Book added successfully!';
        setTimeout(() => {
          this.toastMessage = null;
          this.router.navigate(['/allBook']);
        }, 3000);
      },
      error: (error) => {
        console.error('❌ Error adding book:', error);
        this.toastMessage = 'Failed to add book!';
        setTimeout(() => (this.toastMessage = null), 3000);
      }
    });
  }
}

