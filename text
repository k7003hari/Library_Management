<app-navbar></app-navbar>

<div class="container mt-8 text-center">
  <h2 class="mb-4 text-primary">
    ðŸ‘¥ Member Module
  </h2>
  <p class="text-muted mb-5">Manage all member-related operations from here</p>
 
<!-- Search Member Section -->
<div class="container mt-5 pt-5">
  <h2 class="text-center text-primary mb-4">Search Member by ID</h2>

  <div class="card p-4 shadow-sm">
    <div class="form-group mb-3">
      <input
        type="number"
        [(ngModel)]="memberId"
        class="form-control"
        placeholder="Enter Member ID"
      />
    </div>
    <button class="btn btn-primary w-100" (click)="searchMember()">Search</button>
  </div>

  <div *ngIf="member" class="card mt-4 shadow border-success">
    <div class="card-body">
      <h5 class="card-title text-success">Member Found</h5>
      <p><strong>Name:</strong> {{ member.name }}</p>
      <p><strong>Email:</strong> {{ member.email }}</p>
      <p><strong>Phone:</strong> {{ member.phone }}</p>
      <p><strong>Address:</strong> {{ member.address }}</p>
      <p><strong>Status:</strong> {{ member.membershipStatus }}</p>
    </div>
    <div class="card-footer text-end">
      <button class="btn btn-outline-secondary" routerLink="/member">Ok</button>
    </div>
  </div>
</div>

<!-- Manage Members Section -->
<div class="container mt-5">
  <h2 class="text-center mb-4 text-primary">Manage Members</h2>
  <div class="row row-cols-1 row-cols-md-3 g-4">
    <div class="col" *ngFor="let member of members">
      <div class="card h-100 shadow-sm">
        <img
          src="https://cdn-icons-png.flaticon.com/512/2288/2288510.png"
          class="card-img-top p-4"
          alt="Member Icon"
          style="height: 180px; object-fit: contain;"
        />
        <div class="card-body">
          <h5 class="card-title text-center text-primary">Member Details</h5>
          <p><strong>Name:</strong> {{ member.name }}</p>
          <p><strong>Email:</strong> {{ member.email }}</p>
          <p><strong>Phone:</strong> {{ member.phone }}</p>
          <p><strong>Address:</strong> {{ member.address }}</p>
          <p><strong>Status:</strong> {{ member.membershipStatus }}</p>
        </div>
        <div class="card-footer d-flex flex-column gap-2">
          <button class="btn btn-warning" (click)="updateMember(member.memberId)">Update</button>
          <button class="btn btn-danger" (click)="deleteMember(member.memberId)">Delete</button>
          <button class="btn btn-success" (click)="checkfine()">Check Fine</button>
          <button class="btn btn-primary" (click)="pay()">Pay Fine</button>
        </div>
      </div>
    </div>
    <div  class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex align-items-stretch mb-4">
      <div class="card add-book-card shadow w-100 text-center" routerLink="/addMember" style="cursor: pointer;">
        <div class="card-body d-flex flex-column justify-content-center align-items-center">
          <i class="bi bi-plus-circle-fill display-4 text-success mb-3"></i>
          <h5 class="text-success fw-semibold">Add New Member</h5>
          <p class="text-muted small" >Click to add a new Member</p>
        </div>
      </div>
    </div>
  </div>
</div>

import { Component, OnInit } from '@angular/core';
import { MemberService } from '../member.service';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Router, RouterLink } from '@angular/router';
import { NavbarComponent } from '../navbar/navbar.component';

@Component({
  selector: 'app-member-up-del',
  standalone: true,
  imports: [RouterLink, FormsModule, CommonModule, NavbarComponent],
  templateUrl: './member-up-del.component.html',
  styleUrls: ['./member-up-del.component.css']
})
export class MemberUpDelComponent implements OnInit {
  members: any[] = [];
  memberId: number = 0;
  member: any = null;

  constructor(private memberService: MemberService, private router: Router) {}

  ngOnInit(): void {
    this.loadMembers();
  }

  loadMembers(): void {
    this.memberService.getAllMembers().subscribe(data => {
      this.members = data;
    });
  }

  updateMember(memberId: number): void {
    this.router.navigate(['/updateMember', memberId]);
  }

  deleteMember(memberId: number): void {
    if (confirm('Are you sure you want to delete this member?')) {
      this.memberService.deleteMember(memberId).subscribe(() => {
        alert("Deleted successfully");
        this.loadMembers();
      });
    }
  }

  searchMember(): void {
    if (!this.memberId) {
      alert('Please enter a valid Member ID');
      return;
    }

    this.memberService.getMemberById(this.memberId).subscribe({
      next: (data) => {
        this.member = data;
        console.log('Member found:', data);
      },
      error: (error) => {
        alert('Member not found.');
        this.member = null;
        console.error('Error fetching member:', error);
      }
    });
  }

  checkfine(){
    this.router.navigate(['/fineCal']);
  }

  pay(){
    this.router.navigate(['/finePay']);
  } 
}

// import { Injectable } from '@angular/core';
// import { HttpClient } from '@angular/common/http';
// import { Observable } from 'rxjs';
 
// @Injectable({
//   providedIn: 'root'
// })
// export class MemberService {
//   private addUrl = 'http://localhost:9090/members/regMember';
//   private viewUrl = 'http://localhost:9090/members/getallMember';
//   private searchUrl = 'http://localhost:9090/members/';
//   private updateUrl = 'http://localhost:9090/members/update/';
//   private deleteUrl = 'http://localhost:9090/members/delete/';
 
//   constructor(private http: HttpClient) {}
 
//   addMember(member: any): Observable<any> {
//     return this.http.post(this.addUrl, member);
//   }
 
//   getAllMembers(): Observable<any> {
//     return this.http.get(this.viewUrl);
//   }
 
//   getMemberById(id: number): Observable<any> {
//     return this.http.get(this.searchUrl + id);
//   }
 
//   updateMember(id: number, member: any): Observable<any> {
//     return this.http.put(this.updateUrl + id, member);
//   }
 
//   deleteMember(id: number): Observable<any> {
//     return this.http.delete(this.deleteUrl + id);
//   }
// }
 
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class MemberService {
  private addUrl = 'http://localhost:9090/members/regMember';
  private viewUrl = 'http://localhost:9090/members/getallMember';
  private searchUrl = 'http://localhost:9090/members/';
  private updateUrl = 'http://localhost:9090/members/update/';
  private deleteUrl = 'http://localhost:9090/members/delete/';

  constructor(private http: HttpClient) {}

  addMember(member: any): Observable<any> {
    return this.http.post(this.addUrl, member);
  }

  getAllMembers(): Observable<any> {
    return this.http.get(this.viewUrl);
  }

  getMemberById(id: number): Observable<any> {
    return this.http.get(this.searchUrl + id);
  }

  updateMember(id: number, member: any): Observable<any> {
    return this.http.put(this.updateUrl + id, member);
  }

  deleteMember(id: number): Observable<any> {
    return this.http.delete(this.deleteUrl + id);
  }
}

